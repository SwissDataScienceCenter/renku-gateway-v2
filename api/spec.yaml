openapi: 3.0.2
info:
  title: Renku gateway
  description: Login flow, OAuth callbacks and authentication for Renku
  version: v1
servers:
  - url: /api/auth
paths:
  /login:
    get:
      description: Starts the login process for Renku.
      parameters:
        - in: query
          name: redirectUrl
          required: false
          schema:
            type: string
        - in: query
          name: providerId
          required: false
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
      responses:
        '302':
          description: The user is redirected to the proper login page.
      tags:
        - oauth
  /callback:
    get:
      description: |
        Authorization code flow callback used to receive the authorization code from an Oauth2 
        identity provider and exchange it for an access token.
      responses:
        '302':
          description: The authroization code was used to acquire the access token and the request is redirected further
      tags:
        - oauth
  /logout:
    get:
      description: |
        Log the user out of Renku.
      parameters:
        - in: query
          name: redirectUrl
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The user was successfully logged out
        '302':
          description: The user was successfully logged out and redirected to the requested redirect page
      tags:
        - oauth
  /cli/login-init:
    post:
      description: Starts the login process for the the CLI.
      responses:
        '200':
          description: Login session created.
          content: 
            application/json:
              schema:
                type: object
                properties:
                  loginID:
                    type: string
                required:
                  - loginID
      tags:
        - cli
  /cli/login-complete:
    post:
      description: Gets the full sessionID when the login is completed.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                loginID:
                  type: string
              required:
                - loginID
      responses:
        '400':
          description: The login has not completed, is denied or the loginID is not valid.
        '200':
          description: The login completed successfully.
          content: 
            application/json:
              schema:
                type: object
                properties:
                  sessionID:
                    type: string
                required:
                  - sessionID
      tags:
        - cli
  /health:
    get:
      description: Healthcheck endpoint.
      responses:
        '200':
          description: The service is running properly.
      tags:
        - info
components:
  parameters:
    Oauth2CallbackCode:
      name: code
      in: query
      required: true
      schema:
        type: string
    Oauth2CallbackState:
      name: state
      in: query
      required: false
      schema:
        type: string
    Oauth2CallbackSessionState:
      name: session_state
      in: query
      required: false
      schema:
        type: string
    Oauth2CallbackIss:
      name: iss
      in: query
      required: false
      schema:
        type: string
