# Default values for the gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

gateway:
  ## Optional list of allowed sources for Cross-Origin Resource Sharing.
  ## https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
  allowOrigin:
  # - http://example.com
  # - https://foo.example.com

## Global variables
## Shared values/secrets
global:
  ## Set to true if using https
  useHTTPS: false
  ## The URL path prefix under which gitlab is running.
  ## Must contain a leading slash, use "/" for root path.
  gitlab:
    urlPrefix: /gitlab
  renku:
    ## Domain name for the deployed instance of Renku. Most likely
    ## set by parent chart.
    domain: example.local

    ## Set the Keycloak Realm name used by Renku here - the default
    ## value is "Renku" and is set on the application level. You may
    ## override this here if you are using an external Keycloak instance
    ## and want to use an existing realm. If Keycloak is deployed as a
    ## part of Renku DO NOT change this value.
    # keycloak:
    #   realm: Renku

  keycloak:
    ## Explicitly set another realm than "renku" here
    realm:
  ## Specify a secret that containes the certificate
  ## if you would like to use a custom CA. The key for the secret
  ## should have the .crt extension otherwise it is ignored. The
  ## keys across all secrets are mounted as files in one location so
  ## the keys across all secrets have to be unique.
  ## In addition to this the certificates have to be seperately defined
  ## in the Traefik section below for the Traefik Helm sub-chart.
  certificates:
    image:
      repository: renku/certificates
      tag: "0.0.2"
    customCAs: []
      # - secret:

  ## Specify the information required to connect to a redis instance.
  ## All the values below are required.
  ## Note that in almost all real-world use cases Redis is provided
  ## with the Renku helm chart not with every component of Renku.
  ## Therefore in most cases these values do not need to be modified.
  ## But in the rare cases where the values need to be modified, then this should be
  ## done in the global section for the renku helm chart, not in every component.
  redis:
    sentinel:
      ## Set to true if redis host/port point to a redis sentinel.
      enabled: true
      masterSet: mymaster
      addresses: []
    dbIndex:
      gateway: "0"
    host: renku-redis
    port: 26379
    clientLabel:
      renku-redis-client: "true"
    existingSecret: redis-secret
    existingSecretPasswordKey: redis-password
  ## to enable debug mode
  debug: false

## To protect the backend services from an excessive amount of API calls
## issued by one client, one can enforce rate limits here. The limits apply
## per UI client session (identified by the cookies). For an explanation of
## the different values check out the rate limiting documentation of traefik
## v2.0.
rateLimits:
  ## General rate limit, applies to all /api calls combined.
  general:
    period: 10s
    average: 20
    burst: 100

## Set to a custom GitLab URL if deployed manually
# gitlabUrl:

# Encrypt the user access and refresh tokens stored
tokenEncryption:
  enabled: true
  key: 

service:
  type: ClusterIP
  port: 80

nodeSelector: {}

tolerations: []

affinity: {}

podSecurityContext: {}

securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  allowPrivilegeEscalation: false

## Settings for the graph services
graph:
  webhookService:
    ## Set the hostname under which the webhook service
    ## can be reached (internally). This will default to
    ## http://<release-name>-webhook-service
    hostname:
  knowledgeGraph:
    ## Set the hostname under which the webhook service
    ## can be reached (internally). This will default to
    ## http://<release-name>-knowledge-graph
    hostname:

core:
  ## Set the hostname under which the core service
  ## can be reached (internally). This will default to
  ## http://<release-name>-core
  hostname:

notebooks:
  hostname:

# GitLab has introduced a new logout behavior in 12.7.0
# which was initially broken and fixed in 12.9.0.
# Set this to 'true' for versions < 12.7.0, leave it to
# 'false' for versions >= 12.9.0.
oldGitLabLogout: false

# For deployments with an external GitLab instance, we don't want to terminate
# a GitLab session when users log out from Renku. By default, we assume that a
# dedicated GitLab instance is deployed, so, logging out from Renku should
# trigger a logout from GitLab.
logoutGitLabUponRenkuLogout: true

# sentry configuration
sentry:
  enabled: false
  dsn:
  environment:

# An ingress could be enabled here. Usually the gateway runs
# without its own ingress.
ingress:
  enabled:

providersConfig:
  secretName: ""
  secretKey: ""

reverseProxy:
  image:
    name: registry.dev.renku.ch/tasko.olevski/renku-images/renku-revproxy
    tag: "0.0.7"
    pullPolicy: IfNotPresent
  metrics:
    enabled: true
    port: 8765
  replicaCount: 1
  podAnnotations: {}
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    targetMemoryUtilizationPercentage:
    targetCPUUtilizationPercentage:
  updateStrategy: {}

login:
  image:
    name: registry.dev.renku.ch/tasko.olevski/renku-images/renku-login
    tag: "0.0.7"
    pullPolicy: IfNotPresent
  metrics:
    enabled: true
    port: 8765
  replicaCount: 1
  podAnnotations: {}
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    targetMemoryUtilizationPercentage:
    targetCPUUtilizationPercentage:
  updateStrategy: {}
